{"version":3,"sources":["./src/app/shared/services/misc.service.ts","./src/app/inscription/inscription.component.ts","./src/app/inscription/inscription.component.html","./src/app/shared/pipes/pipes.module.ts","./src/app/shared/services/auth-guard.service.ts","./src/environments/environment.ts","./src/app/shared/services/date.service.ts","./src/app/article/article.component.ts","./src/app/article/article.component.html","./src/app/shared/modules/fontawesome/fontawesome.module.ts","./src/app/shared/interceptors/auth.interceptor.ts","./src/app/connexion/connexion.component.ts","./src/app/connexion/connexion.component.html","./src/app/shared/services/auth-keep.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/services/authentication.service.ts","./src/app/shared/components/LoginRegister/loginRegister.module.ts","./src/app/shared/modules/material/material.module.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/shared/interceptors/response.interceptor.ts","./src/app/shared/services/article.service.ts","./src/app/shared/pipes/selected-tags.pipe.ts","./src/app/shared/pipes/selected-tags-search.pipe.ts","./src/app/shared/components/LoginRegister/lrheader/lrheader.component.ts","./src/app/shared/components/LoginRegister/lrheader/lrheader.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/shared/services/string.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MiscService {\n\n    constructor() {\n    }\n\n    multiSort(array, sortObject = {}) {\n        const sortKeys = Object.keys(sortObject);\n\n        // Return array if no sort object is supplied.\n        if (!sortKeys.length) {\n            return array;\n        }\n\n        // Change the values of the sortObject keys to -1, 0, or 1.\n        for (let key in sortObject) {\n            sortObject[key] = sortObject[key] === 'desc' || sortObject[key] === -1 ? -1\n                : (sortObject[key] === 'skip' || sortObject[key] === 0 ? 0 : 1);\n        }\n\n        const keySort = (a, b, direction) => {\n            direction = direction !== null ? direction : 1;\n\n            if (a === b) { // If the values are the same, do not switch positions.\n                return 0;\n            }\n\n            // If b > a, multiply by -1 to get the reverse direction_swipe.\n            return a > b ? direction : -1 * direction;\n        };\n\n        return array.sort((a, b) => {\n            let sorted = 0;\n            let index = 0;\n\n            // Loop until sorted (-1 or 1) or until the sort keys have been processed.\n            while (sorted === 0 && index < sortKeys.length) {\n                const key = sortKeys[index];\n\n                if (key) {\n                    const direction = sortObject[key];\n\n                    if (key.includes('@')) {\n                        const key1 = key.split('@')[0];\n                        const key2 = key.split('@')[1];\n                        sorted = keySort(a[key1][key2], b[key1][key2], direction);\n                    } else {\n                        sorted = keySort(a[key], b[key], direction);\n                    }\n                    index++;\n                }\n            }\n\n            return sorted;\n        });\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthenticationService} from '../shared/services/authentication.service';\nimport {userReturned} from '../shared/models/userReturned.model';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-inscription',\n    templateUrl: './inscription.component.html',\n    styleUrls: ['./inscription.component.scss']\n})\nexport class InscriptionComponent implements OnInit {\n\n\n    public registerForm: FormGroup;\n\n    constructor(\n        public fb: FormBuilder,\n        public auth: AuthenticationService,\n        public router: Router\n    ) {\n    }\n\n\n    ngOnInit(): void {\n\n        this.initForm();\n    }\n\n    MatchPassword(password: string, confirmPassword: string) {\n        return (formGroup: FormGroup) => {\n            const passwordControl = formGroup.controls[password];\n            const confirmPasswordControl = formGroup.controls[confirmPassword];\n\n            if (!passwordControl || !confirmPasswordControl) {\n                return null;\n            }\n\n            if (confirmPasswordControl.errors && !confirmPasswordControl.errors.passwordMismatch) {\n                return null;\n            }\n\n            if (passwordControl.value !== confirmPasswordControl.value) {\n                confirmPasswordControl.setErrors({passwordMismatch: true});\n            } else {\n                confirmPasswordControl.setErrors(null);\n            }\n        };\n    }\n\n\n    initForm() {\n        this.registerForm = this.fb.group({\n            username: ['', [Validators.required]],\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required]],\n            confirmPassword: ['', [Validators.required]]\n        }, {validator: this.MatchPassword('password', 'confirmPassword')});\n    }\n\n\n    checkPasswords(group: FormGroup) {\n        console.log(group.controls.password.value === group.controls.confirmPassword.value);\n        return group.controls.password.value === group.controls.confirmPassword.value;\n    }\n\n    onValidRegisterForm() {\n        let userAuth = this.registerForm.value;\n        console.log(userAuth);\n        this.auth.signup(userAuth).subscribe((user: userReturned) => {\n            this.router.navigate(['/connexion']);\n        });\n    }\n}\n","<div class=\"LRFullLayer\">\n  <div class=\"LRContainer\">\n    <app-lrheader>\n    </app-lrheader>\n    <div class=\"LRContent flexVerticalCentered\">\n      <form (ngSubmit)=\"onValidRegisterForm()\" [formGroup]=\"registerForm\">\n\n        <div class=\"Field\">\n          <label for=\"username\">Username</label>\n          <input formControlName=\"username\" id=\"username\" type=\"text\">\n        </div>\n\n        <div class=\"Field\">\n          <label for=\"email\">Email</label>\n          <input formControlName=\"email\" id=\"email\" type=\"email\">\n        </div>\n\n        <div class=\"Field\">\n          <label for=\"password\">Password</label>\n          <input formControlName=\"password\" id=\"password\" type=\"password\">\n        </div>\n\n        <div class=\"Field\">\n          <label for=\"password\">Confirm password</label>\n          <input formControlName=\"confirmPassword\" id=\"confirmPassword\"\n                 type=\"password\">\n        </div>\n\n\n        <div class=\"Field\" style=\"text-align: center;\">\n          <input [disabled]=\"registerForm.invalid\" type=\"submit\"\n                 class=\"validFormButton\" value=\"create account\">\n        </div>\n\n      </form>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SelectedTagsPipe } from './selected-tags.pipe';\nimport {SelectedTagsSearchPipe} from './selected-tags-search.pipe';\n\n@NgModule({\n  declarations: [SelectedTagsPipe, SelectedTagsSearchPipe],\n  imports: [\n    CommonModule\n  ],\n    exports: [SelectedTagsPipe, SelectedTagsSearchPipe]\n})\nexport class PipesModule { }\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router} from '@angular/router';\nimport {AuthenticationService} from './authentication.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n    constructor(\n        private auth: AuthenticationService,\n        private router: Router) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot): boolean {\n\n        if (!this.auth.isConnected) {\n            this.router.navigate(['/connexion']);\n            return false;\n        } else {\n            return true;\n        }\n\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'localhost:3000/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DateService {\n\n    constructor() {\n    }\n\n    formatDate(date: string): string {\n\n        var event = new Date(date);\n        var options = {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'};\n        return event.toLocaleDateString('en-EN', options);\n\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ArticleService} from '../shared/services/article.service';\nimport {Article} from '../shared/models/article.model';\nimport {HttpParams} from '@angular/common/http';\nimport {DateService} from '../shared/services/date.service';\nimport {AuthenticationService} from '../shared/services/authentication.service';\nimport {StringService} from '../shared/services/string.service';\nimport {MiscService} from '../shared/services/misc.service';\n\n\n@Component({\n    selector: 'app-article',\n    templateUrl: './article.component.html',\n    styleUrls: ['./article.component.scss']\n})\nexport class ArticleComponent implements OnInit {\n\n    public editMode: boolean = false;\n    public creationMode: boolean = false;\n    public defaultMode: boolean = false;\n\n    public idArticle = null;\n    public articleForm: FormGroup;\n    public currentArticle: Article = null;\n\n    public textComment: string = '';\n    public articleProtected: boolean = false;\n    public articleNotExist: boolean = false;\n    public selectTagDisplayed: boolean = false;\n    public chosenTag: string = '';\n    public chosenTags: any[];\n    public searchString: string;\n    public tagProposal: string = '';\n    public tagString: string;\n\n    public foundArticles: Article[] = [];\n    public nextPage: string;\n    public totalResults: string;\n    public waitingArticle;\n    public sortResults='';\n\n    public reactionsCount: any = {\n        like: 0,\n        heart: 0,\n        idea: 0\n    };\n\n    public myReactions: any = {\n        like: {\n            state: false,\n            id: null\n        },\n        heart: {\n            state: false,\n            id: null\n        },\n        idea: {\n            state: false,\n            id: null\n        },\n    };\n\n\n    constructor(\n        public route: ActivatedRoute,\n        public router: Router,\n        public fb: FormBuilder,\n        public article: ArticleService,\n        public DS: DateService,\n        public auth: AuthenticationService,\n        public stringS: StringService,\n        public misc:MiscService\n    ) {\n    }\n\n    ngOnInit(): void {\n\n        this.route.paramMap.subscribe(params => {\n\n            // Routing \"interne\"\n\n            this.editMode = params.get('action') === 'edit' || params.get('id') === 'new';\n            this.idArticle = params.get('id');\n\n            this.defaultMode = false;\n            this.articleProtected = false;\n\n            // Download tag peut être \"synchone\" ou \"asynchrone\"\n            // (suivant si les tags sont déja présents)\n\n            this.article.retrieveTags().then(() => {\n\n                this.creationMode = params.get('id') === 'new';\n\n                if (!this.idArticle || (isNaN(this.idArticle) && !this.creationMode)) {\n\n                    this.defaultMode = true;\n\n                } else {\n\n                    if (this.creationMode) {\n\n                        this.newArticleInitialisation();\n\n                    } else {\n\n                        // Optimisation : Si on ne change pas d'article, on ne le retélécharge pas\n                        // On utilise la sauvegarde du service \"article\"\n\n                        if (this.article.currentArticle && this.article.currentArticle.id == this.idArticle) {\n\n                            this.currentArticle = this.article.currentArticle;\n                            this.processInitialisation();\n\n                        } else {\n\n                            this.initializeReactions();\n                            this.article.getArticle(this.idArticle).subscribe((article: Article) => {\n\n                                if (article['status'] === 5) {\n\n                                    this.articleNotExist = true;\n                                    this.currentArticle = null;\n\n                                } else if (article['status'] === 4) {\n\n                                    this.articleProtected = true;\n                                    this.currentArticle = null;\n\n                                } else {\n\n                                    this.currentArticle = article;\n                                    this.processInitialisation();\n\n                                }\n\n                            });\n                        }\n                    }\n\n                }\n\n            });\n        });\n    }\n\n\n\n\n\n\n    //------------------------------------------------------------------------------------\n    // Initialisation du component\n    //------------------------------------------------------------------------------------\n\n\n    private newArticleInitialisation() : void {\n        this.currentArticle = null;\n        this.article.currentArticle = null;\n        this.articleForm = this.fb.group({\n            name: ['', [Validators.required]],\n            content: [''],\n            draft: [true],\n            selectTag: ['']\n        });\n    }\n\n    private initForm(article: Article) : void {\n\n        this.articleForm = this.fb.group({\n            name: [article.name, [Validators.required]],\n            content: [article.content],\n            draft: [article.draft],\n            selectTag: ['']\n        });\n    }\n\n\n    private initializeReactions() : void{\n        this.reactionsCount = {\n            like: 0,\n            heart: 0,\n            idea: 0\n        };\n\n        this.myReactions = {\n            like: {\n                state: false,\n                id: null\n            },\n            heart: {\n                state: false,\n                id: null\n            },\n            idea: {\n                state: false,\n                id: null\n            },\n        };\n    }\n\n    private initReactions() : void{\n        this.currentArticle.reactions.forEach(reaction => {\n\n            if (reaction.user.id == this.auth.userSession.idUser) {\n                this.myReactions[reaction['type']]['state'] = true;\n                this.myReactions[reaction['type']]['id'] = reaction.id;\n            }\n\n            this.reactionsCount[reaction['type']]++;\n\n        });\n    }\n\n    private initTags() : void {\n        this.currentArticle.Tag.forEach(tag => {\n            this.article.tags.forEach(tag_ => {\n                if (tag_['id'] == tag) {\n                    tag_['chosen'] = true;\n                }\n            });\n        });\n    }\n\n\n    private processInitialisation() : void {\n\n        this.initTags();\n        this.initReactions();\n\n        if (this.editMode) {\n            this.initForm(this.currentArticle);\n        }\n    }\n\n\n\n\n\n\n\n    //------------------------------------------------------------------------------------\n    // Actions LECTURE Article\n    //------------------------------------------------------------------------------------\n\n\n    public addComment() : void {\n\n        this.article.addComment(this.textComment).subscribe((comment) => {\n            this.currentArticle.comments.push(comment);\n            this.textComment = '';\n        });\n    }\n\n\n    public toggleReaction(reaction) : void {\n\n        this.myReactions[reaction]['state'] = !this.myReactions[reaction]['state'];\n        if (this.myReactions[reaction]['state']) {\n\n            this.reactionsCount[reaction]++;\n            this.article.addReaction(reaction).subscribe((reactionFromServer) => {\n                this.myReactions[reaction]['id'] = reactionFromServer.id;\n            });\n\n        } else {\n\n            this.reactionsCount[reaction]--;\n            this.article.removeReaction(this.myReactions[reaction]['id']).subscribe((status) => {\n            });\n\n        }\n\n    }\n\n\n\n\n\n\n    //------------------------------------------------------------------------------------\n    // Action EDITION / CREATION\n    //------------------------------------------------------------------------------------\n\n    public editArticle() : void {\n        this.router.navigate(['/article', this.idArticle, 'edit']);\n    }\n\n    public deleteArticle(id: string) : void {\n        this.article.deleteArticle(id).subscribe((status)=> {\n            alert(\"l'article a bien été supprimé \");\n            this.router.navigate(['/article']);\n        });\n    }\n\n    public closeEdit(event) : void {\n        this.router.navigate(['/article', this.currentArticle.id]);\n    }\n\n    public saveArticle() : void {\n\n        if (this.creationMode) {\n\n            this.article.addArticle(\n                this.articleForm.value,\n                this.article.tags.filter(t => t['chosen']).map(t => t['id'])\n            ).subscribe((article: Article) => {\n\n                if (this.creationMode) {\n                    this.router.navigate(['/article', article.id, 'edit']);\n                }\n            });\n\n        } else {\n\n            this.article.updateArticle(\n                this.articleForm.value,\n                this.currentArticle.id,\n                this.article.tags.filter(t => t['chosen']).map(t => t['id'])\n            ).subscribe((article: Article) => {\n                this.currentArticle = article;\n            });\n        }\n\n    }\n\n    // Tags\n    //-------------------------------\n\n    public addTag() : void {\n        this.selectTagDisplayed = !this.selectTagDisplayed;\n    }\n\n\n    public pickTag() : void {\n\n        let indSelected = this.article.tags.findIndex(tag => tag['id'] == this.chosenTag);\n        if (indSelected >= 0) {\n            this.article.tags[indSelected]['chosen'] = true;\n        }\n        this.selectTagDisplayed = false;\n\n\n    }\n\n    public removeTag(id) : void {\n        let indSelected = this.article.tags.findIndex(tag => tag['id'] == id);\n        if (indSelected >= 0) {\n            this.article.tags[indSelected]['chosen'] = false;\n        }\n    }\n\n\n\n\n\n\n\n\n\n    //-----------------------------------------------------------------------------\n    // Action de Recherche\n    //-----------------------------------------------------------------------------\n\n\n    public mainSearch(nextSearch: string = '') : void {\n\n        if (!nextSearch) {\n            this.article.nextPage = 1;\n        }\n        this.article.searchArticles(\n            this.searchString,\n            this.article.tags.filter(t => t['selectedForSearch']).map(t => t['id'])\n        ).subscribe((response) => {\n\n            if (nextSearch) {\n                this.foundArticles = this.foundArticles.concat(response.articles);\n            } else {\n                this.foundArticles = response.articles;\n            }\n            this.totalResults = response.totalResults;\n            this.misc.multiSort(this.foundArticles, {'createdAt':'desc'})\n        });\n\n    }\n\n\n\n\n\n    public checkEnterSearch(event) : void {\n        if (event.key === 'Enter') {\n            this.mainSearch();\n        }\n    }\n\n\n    public goToArticle(id: string) : void {\n        this.router.navigate(['/article', id]);\n    }\n\n\n\n\n    // Tag Search\n\n\n    public getTagName(tagApi) {\n\n        return this.article.tags.find(t => {\n            return t['@id'] === tagApi;\n        }).title;\n    }\n\n    public searchTag(event) : void {\n\n        const matchingTag = this.article.tags.filter(tag =>!tag['selectedForSearch']).find(tag=> {\n            return tag['title'].startsWith(this.tagString);\n        });\n\n        if (matchingTag) {\n            this.tagProposal = matchingTag.title;\n\n            if (event.key === 'Enter') {\n\n                let indSelected = this.article.tags.findIndex(tag => tag['id'] == matchingTag.id);\n                if (indSelected >= 0) {\n                    this.article.tags[indSelected]['selectedForSearch'] = true;\n                }\n                this.tagString = '';\n                this.tagProposal = '';\n            }\n        } else {\n            this.tagProposal='';\n        }\n    }\n\n\n    public removeTagSearch(id) {\n        let indSelected = this.article.tags.findIndex(tag => tag['id'] == id);\n        if (indSelected >= 0) {\n            this.article.tags[indSelected]['selectedForSearch'] = false;\n        }\n    }\n\n\n    public pickSorter() : void{\n\n        let crit = this.sortResults.split('-')[0];\n        let order = this.sortResults.split('-')[1];\n        let sortObj = {}\n        sortObj[crit] = order;\n        this.misc.multiSort(this.foundArticles,sortObj);\n\n    }\n\n\n\n\n    public logout() : void {\n        this.article.currentArticle = null;\n        localStorage.removeItem('jwtToken');\n        localStorage.removeItem('idUser');\n        localStorage.removeItem('sessionUsername');\n        localStorage.removeItem('role');\n        this.auth.isConnected = false;\n        this.router.navigate(['/connexion']);\n    }\n\n\n}\n","<div id=\"pageContainer\">\n    <section id=\"article\">\n\n\n        <!--        Le conde HTML Ci dessous s'affiche uniquement si les habilitations-->\n        <!--        ont bien été fournies à l'utilsiateur.-->\n\n        <div *ngIf=\"!articleProtected && !defaultMode\" id=\"authorizedSection\">\n\n            <!--            Formulaire d'édition de l'article-->\n\n            <form *ngIf=\"(editMode && currentArticle) || creationMode\"\n                  (ngSubmit)=\"saveArticle()\"\n                  [formGroup]=\"articleForm\">\n\n                <div id=\"titleArea\">\n\n                    <h1 *ngIf=\"creationMode\" style=\"margin-bottom: 10px;\">Nouvel\n                        Article</h1>\n\n                    <input formControlName=\"name\" id=\"editTitle\"\n                           placeholder=\"Titre de l'article\">\n\n                </div>\n\n                <div id=\"editTextzone\">\n                    <textarea formControlName=\"content\" name=\"\"\n                              id=\"editText\"></textarea>\n                    <div id=\"actionsEdit\">\n                        <div *ngIf=\"article.tags\" id=\"tags\">\n                            <button type=\"button\"\n                                    (click)=\"addTag()\"\n                                    mat-raised-button\n                                    color=\"accent\">Ajouter un tag\n                            </button>\n                            <div id=\"listTags\">\n                                <div *ngFor=\"let tag of article.tags |\n                                selectedTags:true\"\n                                     class=\"chosenTag\">{{ tag['title'] }}\n                                    <mat-icon (click)=\"removeTag(tag['id'])\"\n                                              aria-hidden=\"false\"\n                                              aria-label=\" close icon\">\n                                        close\n                                    </mat-icon>\n                                </div>\n                            </div>\n\n                            <select (change)=\"pickTag()\"\n                                    [(ngModel)]=\"chosenTag\"\n                                    formControlName=\"selectTag\"\n                                    [ngModelOptions]=\"{standalone: true}\"\n                                    [ngClass]=\"{'displayed':\n                            selectTagDisplayed}\" id=\"tagChoice\" name=\"\">\n                                <option value=\"0\" selected></option>\n                                <option [value]=\"tag['id']\" *ngFor=\"let tag of\n                                        article.tags | selectedTags:false;\">\n                                    {{tag['title']}}</option>\n                            </select>\n                        </div>\n                        <label for=\"draft\" style=\"margin-right:5px;\">Draft\n                            (not published)\n                        </label>\n                        <input formControlName=\"draft\" type=\"checkbox\"\n                               style=\"margin-right:5px;\"\n                               id=\"draft\">\n                        <button type=\"button\" (click)=\"closeEdit($event)\"\n                                mat-raised-button\n                                color=\"primary\">Fermer\n                        </button>\n                        <button [disabled]=\"articleForm.invalid\"\n                                mat-raised-button color=\"primary\">Enregistrer\n                        </button>\n                    </div>\n                </div>\n            </form>\n\n\n\n\n\n\n\n\n\n\n            <!--            Affichage en lecture de l'article-->\n            <div *ngIf=\"!editMode && currentArticle\" id=\"readArticle\">\n\n                <div id=\"titleArea\">\n                    <div *ngIf=\"article.tags\" id=\"listtagsRead\">\n                        <div *ngFor=\"let tag of article.tags |\n                        selectedTags:true\"\n                             class=\"tag\">\n                            {{tag['title']}}\n                        </div>\n                    </div>\n                    <h1>{{currentArticle.name}}</h1>\n                    <h2>Author : {{currentArticle.user['username']}} - Published\n                        at\n                        {{ DS.formatDate(currentArticle.updateAt) }}</h2>\n                    <div id=\"zone_picto\">\n\n                        <mat-icon\n                            (click)=\"this.router.navigate(['/article','new'])\"\n                            *ngIf=\"!creationMode\"\n                            aria-hidden=\"false\"\n                            aria-label=\" note_add icon\">note_add\n                        </mat-icon>\n                        <mat-icon *ngIf=\"currentArticle.isEditable\"\n                                  (click)=\"editArticle()\"\n                                  aria-hidden=\"false\"\n                                  aria-label=\" edit icon\">\n                            edit\n                        </mat-icon>\n                        <mat-icon *ngIf=\"currentArticle.user['id'] ===\n                        auth.userSession.idUser\"\n                                  (click)=\"deleteArticle(currentArticle.id)\"\n                                  aria-hidden=\"false\"\n                                  aria-label=\" delete icon\">\n                            delete\n                        </mat-icon>\n                    </div>\n                </div>\n                <div id=\"textArea\">\n                    <p>\n                        {{ currentArticle.content }}\n                    </p>\n                    <div id=\"reactions\">\n                        <div *ngIf=\"currentArticle.draft\" id=\"infoArticle\">\n                            Article\n                            non\n                            publié\n                        </div>\n                        <div\n                            [ngClass]=\"{'allreadyReacted':myReactions['heart']['state']}\"\n                            (click)=\"toggleReaction('heart')\"\n                            class=\"groupReaction\">\n                            <mat-icon aria-hidden=\"false\"\n                                      aria-label=\" lightbulb icon\">\n                                tag_faces\n                            </mat-icon>\n                            <span>{{ reactionsCount.heart }}</span>\n                        </div>\n\n                        <div\n                            [ngClass]=\"{'allreadyReacted':myReactions['idea']['state']}\"\n                            (click)=\"toggleReaction('idea')\"\n                            class=\"groupReaction\">\n                            <mat-icon aria-hidden=\"false\"\n                                      aria-label=\" lightbulb icon\">\n                                lightbulb\n                            </mat-icon>\n                            <span>{{ reactionsCount.idea }}</span>\n                        </div>\n\n                        <div\n                            [ngClass]=\"{'allreadyReacted':myReactions['like']['state']}\"\n                            (click)=\"toggleReaction('like')\"\n                            class=\"groupReaction\">\n                            <mat-icon aria-hidden=\"false\"\n                                      aria-label=\" thumb_up_alt icon\">\n                                thumb_up_alt\n                            </mat-icon>\n                            <span>{{ reactionsCount.like }}</span>\n                        </div>\n                    </div>\n                </div>\n\n\n\n                <!--            Affichage des commentaires  -->\n\n                <article *ngIf=\"!editMode && currentArticle\" id=\"comments\">\n                    <div *ngFor=\"let comment of currentArticle.comments\"\n                         class=\"comment\">\n                        <div class=\"author\">{{ comment.user['username'] }},\n                            {{ DS.formatDate(comment['updateAt']) }}\n                        </div>\n                        <div class=\"content\">\n                            <div class=\"picture\">\n                                <mat-icon\n                                    style=\"font-size: 50px;margin-left: 25px;\"\n                                    aria-hidden=\"false\"\n                                    aria-label=\" account_box icon\">\n                                    account_box\n                                </mat-icon>\n                            </div>\n                            <div class=\"commentText\">\n                                {{ comment.content }}\n                            </div>\n                        </div>\n                    </div>\n\n\n\n<!--                    Nouveau commentaire-->\n                    <div id=\"writeCommentZone\">\n                    <textarea [(ngModel)]=\"textComment\" name=\"\"\n                              id=\"\"></textarea>\n                        <button [disabled]=\"!textComment\" (click)=\"addComment()\"\n                                mat-raised-button\n                                color=\"primary\">Ajouter\n                        </button>\n                    </div>\n                </article>\n            </div>\n        </div>\n\n\n\n\n\n\n<!--        Article protégé-->\n        <div *ngIf=\"articleProtected\">\n            <mat-icon\n                (click)=\"this.router.navigate(['/article','new'])\"\n                *ngIf=\"!creationMode\"\n                aria-hidden=\"false\"\n                aria-label=\" note_add icon\">note_add\n            </mat-icon>\n            <h1>Vous n'êtes pas autorisé à voir ou éditer cet article</h1>\n        </div>\n\n\n\n\n\n<!--        Page L'article n'existe pas-->\n        <div *ngIf=\"articleNotExist\">\n            <h1>L'article n'existe pas...</h1>\n        </div>\n\n\n\n\n\n\n<!--        Page d'accueil-->\n        <div *ngIf=\"defaultMode\" id=\"defaultMode\">\n            <mat-icon\n                (click)=\"this.router.navigate(['/article','new'])\"\n                *ngIf=\"!creationMode\"\n                aria-hidden=\"false\"\n                aria-label=\" note_add icon\">note_add\n            </mat-icon>\n            <h1>Bienvenue !</h1>\n            <h1>Veuillez saisir un article dans la barre de recherche à\n                droite</h1>\n        </div>\n\n    </section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!--    Section recherche-->\n\n    <section id=\"search\">\n\n\n<!--        Name                              logout -->\n<!--        ---------------------------------------- -->\n\n        <div id=\"firstLineSearch\">\n            <h1 style=\"color: #4b4bfc\">{{\n                auth.userSession.sessionUsername}}\n                <span\n                    *ngIf=\"auth.userSession.role === 'admin'\">({{ auth.userSession.role }}\n                    )</span>\n            </h1>\n\n            <div (click)=\"logout()\" id=\"logoutBar\">\n                <button mat-raised-button color=\"basic\">logout</button>\n            </div>\n        </div>\n\n\n        <!---------------------------------------------------- -->\n        <!--  search                                    { Go } -->\n        <!---------------------------------------------------- -->\n\n        <div id=\"MainSearch\">\n\n            <input (keydown)=\"checkEnterSearch($event)\"\n                   [(ngModel)]=\"searchString\"\n                   placeholder=\"search\"\n                   type=\"text\"\n                   class=\"searchitem\">\n\n            <button (click)=\"mainSearch()\"\n                    style=\"position: absolute;top:2px;right:2px;border-radius:100px; \"\n                    mat-raised-button\n                    color=\"basic\">Go\n            </button>\n        </div>\n\n\n\n\n        <!-------------------------------------------------------->\n        <!--  search by tag                       < select tri> -->\n        <!-------------------------------------------------------->\n\n        <div id=\"tagSearch\">\n            <span *ngIf=\"this.tagProposal && tagString\"\n                  id=\"overText\">{{this.tagProposal}}</span>\n            <label for=\"searchitem\"></label>\n            <input (keyup)=\"searchTag($event)\" [(ngModel)]=\"tagString\"\n                   placeholder=\"search by tag\"\n                   type=\"text\" class=\"searchitem\" id=\"searchitem\">\n            <label for=\"order\"></label>\n            <select style=\"color: #0a0a0a;\" (change)=\"pickSorter()\"\n                    name=\"order\" id=\"order\"\n                    [(ngModel)]=\"sortResults\">\n                <option value=\"createdAt-asc\">Ancien > Récent</option>\n                <option selected value=\"createdAt-desc\">Récent >\n                    Ancien\n                </option>\n                <option value=\"user@username-asc\">Auteur A > Z</option>\n                <option value=\"user@username-desc\">Auteur Z > A</option>\n            </select>\n        </div>\n\n\n\n        <!-------------------------------------------------------->\n        <!--  tag1 X    tag2 X   tag3X etc...                   -->\n        <!-------------------------------------------------------->\n\n        <div id=\"listTagsSearched\">\n            <div *ngFor=\"let tag of article.tags |\n                            selectedTagsSearch:true\"\n                 class=\"chosenTag\">{{ tag['title'] }}\n                <mat-icon (click)=\"removeTagSearch(tag['id'])\"\n                          aria-hidden=\"false\"\n                          aria-label=\" close icon\">close\n                </mat-icon>\n            </div>\n        </div>\n\n\n\n\n\n\n\n\n\n        <div id=\"resultsSearch\">\n            <div *ngIf=\"foundArticles\" id=\"numberResults\">Number of\n                results :\n                <span>{{ this.totalResults }}</span>\n            </div>\n\n            <div id=\"searchZone\">\n                <div\n                    (click)=\"goToArticle(article.id)\"\n                    *ngFor=\"let article\n                 of\n                foundArticles\"\n                    class=\"searchResult\">\n                    <div class=\"lineTags\">\n                        <div *ngFor=\"let tag of article.Tag\"\n                             class=\"tagArtSearch\">\n                            {{ getTagName(tag) }}\n                        </div>\n                    </div>\n                    <div class=\"firstLine\">\n                        <h2 style=\"padding-left: 10px;\">{{ article.name }}</h2>\n                        <span style=\"font-style:italic\">\n                            par {{ article.user.username }}</span>\n                    </div>\n                    <p>{{ stringS.getExcerpt(article.content) }}</p>\n                    <div class=\"lastLine\">\n                        <div class=\"dateSearchArt\">\n                            {{ DS.formatDate(article.createdAt)}}\n                        </div>\n                        <div *ngIf=\"article.draft\"\n                             class=\"etatPublication\">Brouillon\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <button *ngIf=\"article.nextPage > 1\" type=\"button\"\n                    (click)=\"mainSearch('next')\"\n                    mat-raised-button\n                    color=\"accent\">Load More\n            </button>\n\n        </div>\n    </section>\n\n\n    <div id=\"editLoader\" [ngClass]=\"{'displayed':article.isBusy}\">\n        <img src=\"../../assets/img/loading.gif\" height=\"64\"\n             width=\"64\"/>\n    </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faSquare, faHeart, faCheckSquare } from '@fortawesome/free-solid-svg-icons';\n\nconst FONTAWESOME = [\n  FontAwesomeModule\n]\n\n@NgModule({\n  declarations: [],\n  imports: FONTAWESOME,\n  exports: FONTAWESOME\n})\nexport class FontawesomeModule {\n  constructor(private library: FaIconLibrary) {\n    library.addIcons(faSquare, faCheckSquare, faHeart);\n  }\n}\n","import {HttpHandler, HttpInterceptor, HttpRequest, HttpEvent, HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Router} from '@angular/router';\nimport {Injectable} from '@angular/core';\nimport {ArticleService} from '../services/article.service';\nimport {AuthenticationService} from '../services/authentication.service';\n\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(\n        private article: ArticleService\n    ) {\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n\n        this.article.isBusy = true;\n        const token = localStorage.getItem('jwtToken');\n\n        if (token) {\n\n            const authRquest = req.clone({\n                headers: req.headers.set('authorization', token)\n            });\n\n            return next.handle(authRquest);\n\n        } else {\n\n            return next.handle(req);\n\n        }\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthenticationService} from '../shared/services/authentication.service';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-connexion',\n    templateUrl: './connexion.component.html',\n    styleUrls: ['./connexion.component.scss']\n})\nexport class ConnexionComponent implements OnInit {\n\n    public signinForm: FormGroup;\n    public error: string;\n\n    constructor(\n        public fb: FormBuilder,\n        public auth: AuthenticationService,\n        private router: Router\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.initForm();\n    }\n\n\n    initForm() {\n        this.signinForm = this.fb.group({\n\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required]],\n            keepConnected: [true]\n        });\n    }\n\n    public onValidSigninForm(): void {\n        this.auth.signin(this.signinForm.value).subscribe((status: string) => {\n            this.router.navigate(['/article']);\n        }, err => {\n\n        });\n    }\n\n}\n","<div class=\"LRFullLayer\">\n  <div class=\"LRContainer\">\n    <app-lrheader>\n    </app-lrheader>\n    <div class=\"LRContent flexVerticalCentered\">\n      <form (ngSubmit)=\"onValidSigninForm()\" [formGroup]=\"signinForm\">\n\n        <div class=\"Field\">\n          <label for=\"email\">Email</label>\n          <input formControlName=\"email\" id=\"email\" type=\"email\">\n        </div>\n\n        <div class=\"Field\">\n          <label for=\"password\">Password</label>\n          <input formControlName=\"password\" id=\"password\" type=\"password\">\n        </div>\n\n        <div class=\"Field checkbox\">\n          <input formControlName=\"keepConnected\" id=\"keepConnected\" type=\"checkbox\">\n          <label style=\"padding-left: 10px;font-size: 13px;\"\n                 for=\"keepConnected\">Remember\n            me</label>\n        </div>\n\n        <div class=\"Field\" style=\"text-align: center;\">\n          <input [disabled]=\"signinForm.invalid\" type=\"submit\"\n                 class=\"validFormButton\" value=\"sign-in\">\n        </div>\n\n      </form>\n    </div>\n  </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router} from '@angular/router';\nimport {AuthenticationService} from './authentication.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthKeepService implements CanActivate {\n\n    constructor(\n        private auth: AuthenticationService,\n        private router: Router) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot): boolean {\n\n        console.log('on teste bien si on est connecté', this.auth.isConnected);\n        if (this.auth.isConnected) {\n            this.router.navigate(['/article']);\n            return false;\n        } else {\n            return true;\n        }\n\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<router-outlet></router-outlet>\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport {userRegister} from '../models/userRegister.model';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {userReturned} from '../models/userReturned.model';\nimport {HttpClient} from '@angular/common/http';\nimport {userLogin} from '../models/userLogin.model';\nimport {JwtToken} from '../models/jwtToken.model';\nimport {tap} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthenticationService {\n\n    public userAuth: userRegister;\n    public user: userReturned;\n\n    public userSession: {\n        idUser: number;\n        role: string;\n        sessionUsername: string\n    } = {\n        idUser: 0,\n        role: '',\n        sessionUsername: ''\n    };\n\n    public isConnected: boolean = false;\n\n    constructor(public http: HttpClient) {\n        if(localStorage.getItem('jwtToken')) {\n            this.isConnected = true;\n        } else {\n            this.isConnected = false;\n        }\n\n        this.userSession.sessionUsername = localStorage.getItem('sessionUsername');\n        this.userSession.idUser = parseInt(localStorage.getItem('idUser'));\n        this.userSession.role = localStorage.getItem('role');\n\n    }\n\n\n    public signup(userReg: userRegister): Observable<userReturned> {\n        return this.http.post<userReturned>('/api/auth/signup', userReg);\n\n    }\n\n    public signin(credentials: { email: string, password: string }): Observable<any> {\n\n        return this.http.post<any>('/api/auth/signin', credentials).pipe(\n            tap((responseCredentials: any) => {\n\n                if (responseCredentials.status != 3 &&  responseCredentials.status != 1) {\n                    localStorage.setItem('jwtToken', responseCredentials.token);\n                    localStorage.setItem('idUser', responseCredentials.idUser);\n                    localStorage.setItem('sessionUsername', responseCredentials.sessionUsername);\n                    localStorage.setItem('role', responseCredentials.role);\n\n                    this.userSession.idUser = responseCredentials.idUser;\n                    this.userSession.sessionUsername = responseCredentials.sessionUsername;\n                    this.userSession.role = responseCredentials.role;\n                    this.isConnected = true;\n                }\n\n\n            })\n        );\n\n    }\n\n\n}\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {LRHeaderComponent} from './lrheader/lrheader.component';\r\nimport {RouterModule} from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [\r\n    LRHeaderComponent],\r\n  exports: [\r\n    LRHeaderComponent\r\n  ]\r\n})\r\n\r\nexport class loginRegisterModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\n\nconst MATERIALS = [\n  MatButtonModule,\n  MatIconModule\n]\n\n@NgModule({\n  declarations: [],\n  imports: MATERIALS,\n  exports: MATERIALS,\n})\nexport class MaterialModule { }\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app.routing';\nimport {ConnexionComponent} from './connexion/connexion.component';\nimport {RouterModule} from '@angular/router';\nimport {InscriptionComponent} from './inscription/inscription.component';\nimport {loginRegisterModule} from './shared/components/LoginRegister/loginRegister.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {AuthenticationService} from './shared/services/authentication.service';\nimport {HTTP_INTERCEPTORS, HttpClient, HttpClientModule} from '@angular/common/http';\nimport {AuthInterceptor} from './shared/interceptors/auth.interceptor';\nimport {ArticleComponent} from './article/article.component';\nimport {BrowserAnimationsModule, NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MaterialModule} from './shared/modules/material/material.module';\nimport {FontawesomeModule} from './shared/modules/fontawesome/fontawesome.module';\nimport {ArticleService} from './shared/services/article.service';\nimport {ResponseInterceptor} from './shared/interceptors/response.interceptor';\nimport {PipesModule} from './shared/pipes/pipes.module';\nimport {DateService} from './shared/services/date.service';\nimport {StringService} from './shared/services/string.service';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport {MiscService} from './shared/services/misc.service';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ConnexionComponent,\n        InscriptionComponent,\n        ArticleComponent,\n        PageNotFoundComponent,\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        RouterModule,\n        loginRegisterModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        MaterialModule,\n        FontawesomeModule,\n        PipesModule\n    ],\n    providers: [\n        AuthenticationService,\n        ArticleService,\n        DateService,\n        StringService,\n        MiscService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: AuthInterceptor,\n            multi: true\n        },\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ResponseInterceptor,\n            multi: true\n        },\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport {ConnexionComponent} from './connexion/connexion.component';\r\nimport {NgModule} from '@angular/core';\r\nimport {InscriptionComponent} from './inscription/inscription.component';\r\nimport {ArticleComponent} from './article/article.component';\r\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\r\nimport {AuthGuardService} from './shared/services/auth-guard.service';\r\nimport {AuthKeepService} from './shared/services/auth-keep.service';\r\n\r\n// @ts-ignore\r\nconst APP_ROUTES: Routes = [\r\n  {path: '', redirectTo: 'connexion', pathMatch: 'full'},\r\n  {path: 'connexion', component: ConnexionComponent, canActivate: [AuthKeepService]},\r\n  {path: 'inscription', component: InscriptionComponent},\r\n    {\r\n        path: 'article', children: [\r\n            {\r\n                path: '', component: ArticleComponent, pathMatch: 'full', canActivate: [AuthGuardService]\r\n            },\r\n            {\r\n                path: ':id', component: ArticleComponent, canActivate: [AuthGuardService]\r\n            },\r\n            {\r\n                path: ':id/:action', component: ArticleComponent, canActivate: [AuthGuardService]\r\n            }\r\n\r\n        ]\r\n    },\r\n    {path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(APP_ROUTES)\r\n  ]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {HttpHandler, HttpInterceptor, HttpRequest, HttpEvent, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {Injectable} from '@angular/core';\nimport {ArticleService} from '../services/article.service';\nimport {AuthenticationService} from '../services/authentication.service';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ResponseInterceptor implements HttpInterceptor {\n\n    constructor(\n        private router: Router,\n        private article: ArticleService,\n        private auth: AuthenticationService) {\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        return next.handle(req).pipe(\n\n            tap(event => {\n\n                if (event instanceof HttpResponse) {\n\n                    this.article.isBusy = false;\n\n                    if (event.body['status']) {\n\n                        if (event.body['status'] == 2) {\n\n                            this.auth.isConnected = false;\n                            localStorage.removeItem('jwtToken');\n                            this.article.currentArticle = null;\n                            alert('Tentative de fraude');\n                            this.router.navigate(['/connexion']);\n\n                        }\n                        if (event.body['status'] == 1) {\n\n                            alert('Erreur Technique');\n\n                        }\n                        if (event.body['status'] == 3) {\n\n                            alert('Les informations saisies sont incorrectes');\n\n                        }\n                    }\n                }\n            })\n        )\n\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Article} from '../models/article.model';\nimport {Comment} from '../models/comment.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ArticleService {\n\n    public currentArticle: Article;\n    public isBusy: boolean = false;\n    public tags: any = null;\n    public nextPage: number = 1;\n\n    constructor(\n        public http: HttpClient) {\n    }\n\n\n\n    //--------------------------------------------------------------------------\n    // Commun\n    //--------------------------------------------------------------------------\n\n    public retrieveTags() : Promise<any> {\n\n        return new Promise((resolve, reject)=> {\n\n            if (!this.tags) {\n\n                this.http.get<any>('/api/article/getTags').subscribe((tags:any) => {\n\n                    this.tags = tags.map(tag => {\n                        tag.chosen = false;\n                        tag.selectedForSearch = false;\n                        return tag;\n                    });\n                    resolve(this.tags);\n                })\n\n            } else {\n\n                this.tags = this.tags.map(tag => {\n                    tag.chosen = false;\n                    tag.selectedForSearch = false;\n                    return tag;\n                });\n                resolve(this.tags);\n            }\n\n        });\n    }\n\n\n    //--------------------------------------------------------------------------\n    // Edition / Creation\n    //--------------------------------------------------------------------------\n\n    public addArticle(\n        formData: { name: string, content: string, draft: string },\n        tags: any[]\n\n    ) : Observable<Article> {\n\n        let infosArticle = {\n            name: formData.name,\n            content: formData.content,\n            draft: formData.draft,\n            tags: tags\n        };\n\n        return this.http.post<Article>('/api/article/addArticle', infosArticle).pipe(\n            tap((article: Article) => {\n                this.currentArticle = article;\n            })\n        );\n    }\n\n\n    public updateArticle(\n\n        formData: { name: string, content: string, draft: string},\n        id: string,\n        tags: any[]\n\n    ): Observable<Article> {\n\n        let infosArticle = {\n            id: id,\n            name: formData.name,\n            content: formData.content,\n            draft: formData.draft,\n            tags: tags\n        };\n\n        return this.http.post<Article>('/api/article/updateArticle', infosArticle).pipe(\n            tap((article: Article) => {\n\n                this.currentArticle = article;\n            })\n        );\n    }\n\n    public deleteArticle(id): Observable<string> {\n\n        return this.http.post<string>('/api/article/deleteArticle', {id:id});\n    }\n\n\n\n\n\n\n\n    //--------------------------------------------------------------------------\n    // Lecture Article\n    //--------------------------------------------------------------------------\n\n    public addComment(textComment: string): Observable<Comment> {\n\n        const infosComment = {\n            text: textComment,\n            idArticle: this.currentArticle.id\n        }\n\n        return this.http.post<Comment>('/api/article/addComment', infosComment);\n    }\n\n\n    public getArticle(id: string): Observable<Article> {\n\n            return this.http.get<Article>('/api/article/getArticle?idArticle=' + id).pipe(\n                tap((article: Article)=> {\n                    this.currentArticle = article;\n                })\n            )\n    }\n\n\n    public removeReaction(id:string): Observable<string> {\n\n        return this.http.post<string>('/api/article/removeReaction', {id:id});\n    }\n\n    public addReaction(reaction: any): Observable<any> {\n\n        const infosReaction = {\n            type: reaction,\n            idArticle: this.currentArticle.id\n        };\n\n        return this.http.post<any>('/api/article/addReaction', infosReaction);\n\n    }\n\n\n\n\n\n\n\n\n\n\n    //--------------------------------------------------------------------------\n    // Recherche\n    //--------------------------------------------------------------------------\n\n    public searchArticles(query: string, searchedTags: any[]): Observable<any> {\n\n        const infoSearch = {\n            query: query,\n            searchedTags: searchedTags,\n            pageNumber : this.nextPage\n        }\n\n        return this.http.post<any>('/api/article/searchArticles', infoSearch).pipe(\n            tap((repsonse) => {\n\n                    if (repsonse.nextPage !== \"end\") {\n                        this.nextPage = repsonse.nextPage;\n                    } else {\n                        this.nextPage = 1\n                    }\n\n                }\n            )\n        );\n    }\n\n\n\n\n\n\n\n\n}\n\n\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'selectedTags',\n    pure: false\n})\nexport class SelectedTagsPipe implements PipeTransform {\n\n    transform(tags: any, selected: boolean): any {\n        return tags.filter(tag => tag.chosen === selected);\n    }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'selectedTagsSearch',\n    pure: false\n})\nexport class SelectedTagsSearchPipe implements PipeTransform {\n\n    transform(tags: any, selected: boolean): any {\n        if (tags) {\n            return tags.filter(tag => tag.selectedForSearch === selected);\n        } else {\n            return tags;\n        }\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lrheader',\n  templateUrl: './lrheader.component.html',\n  styleUrls: ['./lrheader.component.scss']\n})\nexport class LRHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav>\n  <div class=\"borderContainer\" routerLinkActive=\"active\">\n    <div class=\"ongletContainer\">\n      <a routerLink=\"/connexion\">Login</a>\n    </div>\n  </div>\n  <div class=\"borderContainer\" routerLinkActive=\"active\">\n    <div class=\"ongletContainer\">\n      <a routerLink=\"/inscription\">Register</a>\n    </div>\n  </div>\n\n\n</nav>\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-page-not-found',\n    templateUrl: './page-not-found.component.html',\n    styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n    constructor(private router: Router) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    goToSite() {\n        this.router.navigate(['/article']);\n    }\n}\n","<h1>Page 404. Veuillez cliquer ci dessous pour vous rediriger vers le site</h1>\n<button (click)=\"goToSite()\"\n        mat-raised-button color=\"primary\">Accéder au site\n</button>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StringService {\n\n  constructor() { }\n\n  public getExcerpt(value: string) : string {\n\n      if (value.length > 120) {\n          return value.substring(0, 115) + ' ...';\n      } else {\n          return value;\n      }\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}